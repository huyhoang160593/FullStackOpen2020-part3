{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Button.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","PersonForm","addPhoneBook","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Button","handleClick","text","onClick","Notification","message","flag","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","found","setFound","setMessage","setFlag","useEffect","personService","initialPersons","chosenList","event","re","RegExp","console","log","target","person","name","match","number","preventDefault","personObject","duplicate","find","window","confirm","returnedPerson","map","catch","error","setTimeout","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0099185c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter,handleFilter}) => {\r\n    return(\r\n        <div>\r\n          filter shown with <input \r\n            value={filter}\r\n            onChange={handleFilter}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPhoneBook,newName,handleNameChange,newNumber,handleNumberChange}) => {\r\n   return (\r\n    <div>\r\n        <form onSubmit={addPhoneBook}>\r\n            <div>\r\n                Name: <input \r\n                    value={newName}\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                Number: <input \r\n                    value={newNumber} \r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    \r\n   ) \r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Button = ({handleClick,text}) => {\r\n    return (\r\n    <button onClick={handleClick}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nconst Notification = ({ message,flag}) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    if(flag){\r\n        return (\r\n            <div className=\"information\">\r\n              {message}\r\n            </div>\r\n          )\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n  }\r\n\r\nexport default Notification","import React, { useState,useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\nimport Button from './components/Button'\r\nimport Notification from './components/Notification'\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]) \r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [found, setFound] = useState(persons)\r\n  const [message, setMessage] = useState(null)\r\n  const [flag,setFlag] = useState(false)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addPhoneBook = (event) => {\r\n        event.preventDefault(); //Prevent the default action which reloads the page every time you click the button\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        const duplicate = persons.find(person => person.name === newName)\r\n        console.log(duplicate)\r\n        if (duplicate) {\r\n          let result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)\r\n          if(result){ \r\n            personService\r\n              .update(duplicate.id,personObject)\r\n              .then(\r\n                returnedPerson=> {\r\n                  setPersons(persons.map(person=> person.id!==duplicate.id?person:returnedPerson))\r\n                }\r\n              )\r\n              .catch(error => {\r\n                setMessage(\r\n                  `Information of ${duplicate.name} has already been removed from server`\r\n                )\r\n                setFlag(false)\r\n                setTimeout(() => {\r\n                  setMessage(null)\r\n                }, 3000)\r\n              })\r\n          }\r\n        } else {\r\n            setPersons(persons.concat(personObject));\r\n            personService\r\n              .create(personObject)\r\n              .then(returnedPerson => {\r\n                setPersons(persons.concat(returnedPerson))\r\n                setFlag(true)\r\n                setMessage(`Added ${newName}`)\r\n              })\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 3000)\r\n            setNewName('')\r\n            setNewNumber('')\r\n        }     \r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n      setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n        const re = new RegExp(\"(\"+filter+\")w*\",\"gi\")    //using regex expression to find the right answer\r\n\r\n        console.log(event.target.value)\r\n\r\n        setFilter(event.target.value)\r\n        setFound(persons.filter(person => \r\n          person.name.match(re) || person.number.match(re)\r\n          ))\r\n        console.log(found)\r\n    }\r\n\r\n  const chosenList = filter==='' ? persons : found\r\n  \r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n        <Notification message={message} flag={flag} />\r\n        <Filter filter={filter} handleFilter={handleFilter} />\r\n      <h3>Add a new</h3>\r\n      <PersonForm addPhoneBook={addPhoneBook} \r\n                  newName={newName} \r\n                  handleNameChange={handleNameChange} \r\n                  newNumber={newNumber} \r\n                  handleNumberChange={handleNumberChange} \r\n      />\r\n      <h3>Numbers</h3>\r\n      <ul>{chosenList.map(person =>\r\n          <li key={person.name}>{person.name} {person.number}\r\n              <Button handleClick={()=>{\r\n                  let initialPersons = person.id\r\n                  let result =  window.confirm(`Delete ${person.name} ?`)\r\n                  if(result){\r\n                    personService\r\n                    .remove(person.id)\r\n                    .then(\r\n                        setPersons(persons.filter(person=>person.id !== initialPersons)))\r\n                    }             \r\n                  }\r\n                } text='delete' />\r\n          </li>\r\n          )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}